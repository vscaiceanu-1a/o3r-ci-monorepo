name: Main CI

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build
        run: npm run build

  code-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Unit tests
        run: npm run test
      - name: Audit
        run: npm audit
      - name: Lint
        run: npm run lint:ci
  version:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      nextVersionTag: ${{ steps.new-version.outputs.nextVersionTag }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: New version
        if: github.event_name != 'merge_group'
        id: new-version
        uses: AmadeusITGroup/otter/tools/github-actions/new-version@main
        with:
          defaultBranch: main
          defaultBranchPrereleaseName: prerelease
          releaseBranchRegExp: 'release\/(0|[1-9]\d*)\.(0|[1-9]\d*)(\.0-(?:next|prerelease|rc))?$'
      - name: Create release
        if: github.event_name != 'pull_request'
        run: gh release create v${{ steps.new-version.outputs.nextVersionTag }} --generate-notes ${{ contains( steps.new-version.outputs.nextVersionTag, '-' ) && '--prerelease' || '' }} --target ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
