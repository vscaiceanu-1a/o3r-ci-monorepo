name: Main CI

on:
  push:
    branches:
      - main
      - yarn
      - 'release/*'
  pull_request:
    branches:
      - main
      - yarn
      - 'release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build
        run: yarn run build

  code-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Unit tests
        run: yarn run test
      - name: Audit
        run: yarn npm audit
      - name: Lint
        run: yarn run lint:ci
  # version:
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   outputs:
  #     nextVersionTag: ${{ steps.new-version.outputs.nextVersionTag }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/setup
  #     - name: New version
  #       if: github.event_name != 'merge_group'
  #       id: new-version
  #       uses: AmadeusITGroup/otter/tools/github-actions/new-version@main
  #       with:
  #         defaultBranch: main
  #         defaultBranchPrereleaseName: prerelease
  #         releaseBranchRegExp: 'release\/(0|[1-9]\d*)\.(0|[1-9]\d*)(\.0-(?:next|prerelease|rc))?$'
  #     - name: Create release
  #       if: github.event_name != 'pull_request'
  #       run: gh release create v${{ steps.new-version.outputs.nextVersionTag }} --generate-notes ${{ contains( steps.new-version.outputs.nextVersionTag, '-' ) && '--prerelease' || '' }} --target ${{ github.ref_name }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
